name: master-build

on:
  push:
    branches:
      - master

jobs:
  deploy:
    env:
      ACTIONS_INSTALL_COMMAND: npm install
      ACTIONS_TEST_COMMAND: npm run test
      ACTIONS_BUILD_COMMAND: npm run build
      ACTIONS_BUILD_DIST: dist
      ACTIONS_LOCK_FILE: package-lock.json
      ACTIONS_NODE_VERSION: 15.x
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: git config
        run: |
          git config --global user.email "github-actions@example.com"
          git config --global user.name "Github Actions"
          git config --global push.default simple

      - name: setup branch
        run: |
          workingBranch=`git branch --show-current`
          git fetch origin
          git checkout ${workingBranch}-build
          git merge ${workingBranch} --no-ff -m "merge "$workingBranch

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.ACTIONS_NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - run: npm ci

      - uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles(format('**/{0}',env.ACTIONS_LOCK_FILE)) }}
          restore-keys: ${{ runner.os }}-node-

      - name: install dependencies
        run: ${{ env.ACTIONS_INSTALL_COMMAND }}

      - name: test
        run: ${{ env.ACTIONS_TEST_COMMAND }}

      - name: build
        run: ${{ env.ACTIONS_BUILD_COMMAND }}

      - name: git add
        run: git add ${{ env.ACTIONS_BUILD_DIST }}

      - name: git commit
        run: |
          set +o pipefail
          git commit -m 'build' | true

      - name: git push
        run: git push

      - name: "tagging"
        run: |
          v=`node -e "console.log(JSON.parse(require('fs').readFileSync('package.json','utf8')).version)"`
          git tag v$v && git push --tags || echo "existing tag v$v"

      - name: release
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}